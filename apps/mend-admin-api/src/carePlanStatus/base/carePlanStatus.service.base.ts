/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, CarePlanStatus as PrismaCarePlanStatus } from "@prisma/client";

export class CarePlanStatusServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CarePlanStatusCountArgs, "select">
  ): Promise<number> {
    return this.prisma.carePlanStatus.count(args);
  }

  async carePlanStatuses(
    args: Prisma.CarePlanStatusFindManyArgs
  ): Promise<PrismaCarePlanStatus[]> {
    return this.prisma.carePlanStatus.findMany(args);
  }
  async carePlanStatus(
    args: Prisma.CarePlanStatusFindUniqueArgs
  ): Promise<PrismaCarePlanStatus | null> {
    return this.prisma.carePlanStatus.findUnique(args);
  }
  async createCarePlanStatus(
    args: Prisma.CarePlanStatusCreateArgs
  ): Promise<PrismaCarePlanStatus> {
    return this.prisma.carePlanStatus.create(args);
  }
  async updateCarePlanStatus(
    args: Prisma.CarePlanStatusUpdateArgs
  ): Promise<PrismaCarePlanStatus> {
    return this.prisma.carePlanStatus.update(args);
  }
  async deleteCarePlanStatus(
    args: Prisma.CarePlanStatusDeleteArgs
  ): Promise<PrismaCarePlanStatus> {
    return this.prisma.carePlanStatus.delete(args);
  }
}
