/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  UserLoginHistory as PrismaUserLoginHistory,
} from "@prisma/client";

export class UserLoginHistoryServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.UserLoginHistoryCountArgs, "select">
  ): Promise<number> {
    return this.prisma.userLoginHistory.count(args);
  }

  async userLoginHistories(
    args: Prisma.UserLoginHistoryFindManyArgs
  ): Promise<PrismaUserLoginHistory[]> {
    return this.prisma.userLoginHistory.findMany(args);
  }
  async userLoginHistory(
    args: Prisma.UserLoginHistoryFindUniqueArgs
  ): Promise<PrismaUserLoginHistory | null> {
    return this.prisma.userLoginHistory.findUnique(args);
  }
  async createUserLoginHistory(
    args: Prisma.UserLoginHistoryCreateArgs
  ): Promise<PrismaUserLoginHistory> {
    return this.prisma.userLoginHistory.create(args);
  }
  async updateUserLoginHistory(
    args: Prisma.UserLoginHistoryUpdateArgs
  ): Promise<PrismaUserLoginHistory> {
    return this.prisma.userLoginHistory.update(args);
  }
  async deleteUserLoginHistory(
    args: Prisma.UserLoginHistoryDeleteArgs
  ): Promise<PrismaUserLoginHistory> {
    return this.prisma.userLoginHistory.delete(args);
  }
}
